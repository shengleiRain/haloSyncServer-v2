# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: 构建docker镜像

on:
  # main分支的push操作会触发当前脚本的执行
  push:
    branches: [ main ]
  # main分支的pr操作会触发当前脚本的执行
  pull_request:
    branches: [ main ]

jobs:
  build:
    # 当前脚本是在容器中运行的，对应的镜像是ubuntu-latest
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 15
      uses: actions/setup-java@v3
      with:
        java-version: '15'
        distribution: 'zulu'
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      # 将GTIHUB的信息都打印出来，后面的脚本可以使用这些信息，例如后面的镜像TAG用的就是这里面的commitid
      run: echo "Hello ${{ github.event.commits[0].id }}"
    - name: Grant execute permission for gradlew
      # 给gradlew可执行权限
      run: chmod +x gradlew
    - name: Build with Gradle
      # 执行build命令
      run: ./gradlew build
    - name: Extract files from jar
      # 从构建好的jar中提取制作镜像所需的内容，例如依赖jar、class、配置文件等
      run: mkdir -p build/dependency && (cd build/dependency; jar -xf ../libs/*.jar)
    - name: Login docker hub
      env:
        DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      # 指定login命令登录hub.docker.com，帐号和密码已经在GitHub网页中配置好了
      run: |
        echo "${DOCKER_PASSWORD}" | docker login --username ${DOCKER_USERNAME} --password-stdin
    - name: Set up Docker Buildx
      # 使用buildx来构建镜像，这个工具功能很丰富
      uses: crazy-max/ghaction-docker-buildx@v1
      with:
        buildx-version: latest
    - name: Build dockerfile (with push)
      # 构建镜像，用buildx可以同时构建X86和ARM架构的镜像，然后推送到hub.docker.com
      run: |
          docker buildx build \
          --platform=linux/amd64,linux/arm/v7,linux/arm64 \
          --output "type=image,push=true" \
          --file ./Dockerfile . \
          --tag rain1995/halo-sync:latest
